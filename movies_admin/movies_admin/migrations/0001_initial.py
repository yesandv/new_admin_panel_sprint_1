# Generated by Django 4.2.11 on 2024-09-03 19:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FilmWork",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.TextField(verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="creation_date"
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="rating",
                    ),
                ),
                (
                    "type",
                    models.TextField(
                        choices=[("movie", "movie"), ("tv_series", "tv_series")],
                        verbose_name="type",
                    ),
                ),
            ],
            options={
                "verbose_name": "film_work",
                "verbose_name_plural": "film_works",
                "db_table": 'content"."film_work',
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=300, unique=True, verbose_name="genre_name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
            ],
            options={
                "verbose_name": "genre",
                "verbose_name_plural": "genres",
                "db_table": 'content"."genre',
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "full_name",
                    models.CharField(max_length=300, verbose_name="full_name"),
                ),
            ],
            options={
                "verbose_name": "person",
                "verbose_name_plural": "people",
                "db_table": 'content"."person',
            },
        ),
        migrations.CreateModel(
            name="PersonFilmWork",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.TextField(
                        choices=[
                            ("actor", "actor"),
                            ("director", "director"),
                            ("producer", "producer"),
                            ("writer", "writer"),
                        ],
                        verbose_name="role",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "film_work",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="person_film_works",
                        to="movies_admin.filmwork",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="person_film_works",
                        to="movies_admin.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "person_film_work",
                "verbose_name_plural": "person_film_works",
                "db_table": 'content"."person_film_work',
            },
        ),
        migrations.CreateModel(
            name="GenreFilmWork",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "film_work",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="genre_film_works",
                        to="movies_admin.filmwork",
                    ),
                ),
                (
                    "genre",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="genre_film_works",
                        to="movies_admin.genre",
                    ),
                ),
            ],
            options={
                "verbose_name": "genre_film_work",
                "verbose_name_plural": "genre_film_works",
                "db_table": 'content"."genre_film_work',
            },
        ),
        migrations.AddField(
            model_name="filmwork",
            name="genres",
            field=models.ManyToManyField(
                through="movies_admin.GenreFilmWork", to="movies_admin.genre"
            ),
        ),
        migrations.AddField(
            model_name="filmwork",
            name="people",
            field=models.ManyToManyField(
                through="movies_admin.PersonFilmWork", to="movies_admin.person"
            ),
        ),
        migrations.AddIndex(
            model_name="personfilmwork",
            index=models.Index(
                fields=["person"], name="person_film_work_person_id_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="personfilmwork",
            constraint=models.UniqueConstraint(
                fields=("film_work", "person", "role"),
                name="film_work_id_person_id_role_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="genrefilmwork",
            index=models.Index(fields=["genre"], name="genre_film_work_genre_id_idx"),
        ),
        migrations.AddConstraint(
            model_name="genrefilmwork",
            constraint=models.UniqueConstraint(
                fields=("film_work", "genre"), name="film_work_id_genre_id_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="filmwork",
            index=models.Index(
                fields=["type", "rating"], name="film_work_type_rating_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="filmwork",
            constraint=models.UniqueConstraint(
                fields=("title", "creation_date"),
                name="film_work_title_creation_date_idx",
            ),
        ),
    ]
